// Implementation file for parser generated by fsyacc
module TinyML.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


open TinyML
open FSharp.Common.Parsing.LexYacc
open TinyML.Ast

let parse_error_rich = Some (fun ctx -> raise (ParseErrorContextException ctx))

let desugar_params params e0 = List.foldBack (fun (id, tyo) e -> Lambda (id, tyo, e)) params e0


# 18 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | IF
  | THEN
  | ELSE
  | FUN
  | ARROW
  | LET
  | REC
  | IN
  | TRUE
  | FALSE
  | BRA
  | KET
  | PLUS
  | MINUS
  | STAR
  | SLASH
  | PERCENT
  | LT
  | GT
  | LEQ
  | GEQ
  | EQ
  | NEQ
  | AND
  | OR
  | NOT
  | FLOAT_OP
  | INT_OP
  | STRING_OP
  | CHAR_OP
  | COLON
  | SEMICOLON2
  | COMMA
  | STRING of (System.String)
  | ID of (System.String)
  | CHAR of (System.Char)
  | FLOAT of (System.Double)
  | INT of (System.Int32)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_FUN
    | TOKEN_ARROW
    | TOKEN_LET
    | TOKEN_REC
    | TOKEN_IN
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_BRA
    | TOKEN_KET
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_SLASH
    | TOKEN_PERCENT
    | TOKEN_LT
    | TOKEN_GT
    | TOKEN_LEQ
    | TOKEN_GEQ
    | TOKEN_EQ
    | TOKEN_NEQ
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_FLOAT_OP
    | TOKEN_INT_OP
    | TOKEN_STRING_OP
    | TOKEN_CHAR_OP
    | TOKEN_COLON
    | TOKEN_SEMICOLON2
    | TOKEN_COMMA
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_CHAR
    | TOKEN_FLOAT
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startinteractive
    | NONTERM__startprogram
    | NONTERM_program
    | NONTERM_interactive
    | NONTERM_expr
    | NONTERM_binding
    | NONTERM_param
    | NONTERM_params
    | NONTERM_lit
    | NONTERM_expr_app_atom
    | NONTERM_expr_tuple_atom
    | NONTERM_expr_tuple_atoms
    | NONTERM_ty
    | NONTERM_ty_tuple

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | IF  -> 1 
  | THEN  -> 2 
  | ELSE  -> 3 
  | FUN  -> 4 
  | ARROW  -> 5 
  | LET  -> 6 
  | REC  -> 7 
  | IN  -> 8 
  | TRUE  -> 9 
  | FALSE  -> 10 
  | BRA  -> 11 
  | KET  -> 12 
  | PLUS  -> 13 
  | MINUS  -> 14 
  | STAR  -> 15 
  | SLASH  -> 16 
  | PERCENT  -> 17 
  | LT  -> 18 
  | GT  -> 19 
  | LEQ  -> 20 
  | GEQ  -> 21 
  | EQ  -> 22 
  | NEQ  -> 23 
  | AND  -> 24 
  | OR  -> 25 
  | NOT  -> 26 
  | FLOAT_OP  -> 27 
  | INT_OP  -> 28 
  | STRING_OP  -> 29 
  | CHAR_OP  -> 30 
  | COLON  -> 31 
  | SEMICOLON2  -> 32 
  | COMMA  -> 33 
  | STRING _ -> 34 
  | ID _ -> 35 
  | CHAR _ -> 36 
  | FLOAT _ -> 37 
  | INT _ -> 38 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_IF 
  | 2 -> TOKEN_THEN 
  | 3 -> TOKEN_ELSE 
  | 4 -> TOKEN_FUN 
  | 5 -> TOKEN_ARROW 
  | 6 -> TOKEN_LET 
  | 7 -> TOKEN_REC 
  | 8 -> TOKEN_IN 
  | 9 -> TOKEN_TRUE 
  | 10 -> TOKEN_FALSE 
  | 11 -> TOKEN_BRA 
  | 12 -> TOKEN_KET 
  | 13 -> TOKEN_PLUS 
  | 14 -> TOKEN_MINUS 
  | 15 -> TOKEN_STAR 
  | 16 -> TOKEN_SLASH 
  | 17 -> TOKEN_PERCENT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GT 
  | 20 -> TOKEN_LEQ 
  | 21 -> TOKEN_GEQ 
  | 22 -> TOKEN_EQ 
  | 23 -> TOKEN_NEQ 
  | 24 -> TOKEN_AND 
  | 25 -> TOKEN_OR 
  | 26 -> TOKEN_NOT 
  | 27 -> TOKEN_FLOAT_OP 
  | 28 -> TOKEN_INT_OP 
  | 29 -> TOKEN_STRING_OP 
  | 30 -> TOKEN_CHAR_OP 
  | 31 -> TOKEN_COLON 
  | 32 -> TOKEN_SEMICOLON2 
  | 33 -> TOKEN_COMMA 
  | 34 -> TOKEN_STRING 
  | 35 -> TOKEN_ID 
  | 36 -> TOKEN_CHAR 
  | 37 -> TOKEN_FLOAT 
  | 38 -> TOKEN_INT 
  | 41 -> TOKEN_end_of_input
  | 39 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startinteractive 
    | 1 -> NONTERM__startprogram 
    | 2 -> NONTERM_program 
    | 3 -> NONTERM_interactive 
    | 4 -> NONTERM_interactive 
    | 5 -> NONTERM_expr 
    | 6 -> NONTERM_expr 
    | 7 -> NONTERM_binding 
    | 8 -> NONTERM_binding 
    | 9 -> NONTERM_binding 
    | 10 -> NONTERM_binding 
    | 11 -> NONTERM_binding 
    | 12 -> NONTERM_binding 
    | 13 -> NONTERM_param 
    | 14 -> NONTERM_param 
    | 15 -> NONTERM_params 
    | 16 -> NONTERM_params 
    | 17 -> NONTERM_lit 
    | 18 -> NONTERM_lit 
    | 19 -> NONTERM_lit 
    | 20 -> NONTERM_lit 
    | 21 -> NONTERM_lit 
    | 22 -> NONTERM_lit 
    | 23 -> NONTERM_lit 
    | 24 -> NONTERM_expr_app_atom 
    | 25 -> NONTERM_expr_app_atom 
    | 26 -> NONTERM_expr_app_atom 
    | 27 -> NONTERM_expr_tuple_atom 
    | 28 -> NONTERM_expr_tuple_atom 
    | 29 -> NONTERM_expr_tuple_atom 
    | 30 -> NONTERM_expr_tuple_atom 
    | 31 -> NONTERM_expr_tuple_atom 
    | 32 -> NONTERM_expr_tuple_atom 
    | 33 -> NONTERM_expr_tuple_atom 
    | 34 -> NONTERM_expr_tuple_atom 
    | 35 -> NONTERM_expr_tuple_atom 
    | 36 -> NONTERM_expr_tuple_atom 
    | 37 -> NONTERM_expr_tuple_atom 
    | 38 -> NONTERM_expr_tuple_atom 
    | 39 -> NONTERM_expr_tuple_atom 
    | 40 -> NONTERM_expr_tuple_atom 
    | 41 -> NONTERM_expr_tuple_atom 
    | 42 -> NONTERM_expr_tuple_atom 
    | 43 -> NONTERM_expr_tuple_atom 
    | 44 -> NONTERM_expr_tuple_atom 
    | 45 -> NONTERM_expr_tuple_atom 
    | 46 -> NONTERM_expr_tuple_atom 
    | 47 -> NONTERM_expr_tuple_atom 
    | 48 -> NONTERM_expr_tuple_atom 
    | 49 -> NONTERM_expr_tuple_atom 
    | 50 -> NONTERM_expr_tuple_atom 
    | 51 -> NONTERM_expr_tuple_atom 
    | 52 -> NONTERM_expr_tuple_atom 
    | 53 -> NONTERM_expr_tuple_atoms 
    | 54 -> NONTERM_expr_tuple_atoms 
    | 55 -> NONTERM_ty 
    | 56 -> NONTERM_ty 
    | 57 -> NONTERM_ty 
    | 58 -> NONTERM_ty 
    | 59 -> NONTERM_ty_tuple 
    | 60 -> NONTERM_ty_tuple 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 41 
let _fsyacc_tagOfErrorTerminal = 39

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | FUN  -> "FUN" 
  | ARROW  -> "ARROW" 
  | LET  -> "LET" 
  | REC  -> "REC" 
  | IN  -> "IN" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | BRA  -> "BRA" 
  | KET  -> "KET" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | SLASH  -> "SLASH" 
  | PERCENT  -> "PERCENT" 
  | LT  -> "LT" 
  | GT  -> "GT" 
  | LEQ  -> "LEQ" 
  | GEQ  -> "GEQ" 
  | EQ  -> "EQ" 
  | NEQ  -> "NEQ" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | FLOAT_OP  -> "FLOAT_OP" 
  | INT_OP  -> "INT_OP" 
  | STRING_OP  -> "STRING_OP" 
  | CHAR_OP  -> "CHAR_OP" 
  | COLON  -> "COLON" 
  | SEMICOLON2  -> "SEMICOLON2" 
  | COMMA  -> "COMMA" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | CHAR _ -> "CHAR" 
  | FLOAT _ -> "FLOAT" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | BRA  -> (null : System.Object) 
  | KET  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | PERCENT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LEQ  -> (null : System.Object) 
  | GEQ  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NEQ  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | FLOAT_OP  -> (null : System.Object) 
  | INT_OP  -> (null : System.Object) 
  | STRING_OP  -> (null : System.Object) 
  | CHAR_OP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SEMICOLON2  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;0us;65535us;1us;65535us;2us;3us;1us;65535us;0us;1us;16us;65535us;0us;6us;2us;4us;12us;55us;17us;18us;21us;22us;25us;26us;29us;30us;32us;33us;35us;36us;51us;55us;81us;82us;88us;89us;91us;92us;112us;113us;114us;115us;116us;117us;36us;65535us;0us;8us;2us;90us;12us;90us;17us;90us;21us;90us;25us;90us;29us;90us;32us;90us;35us;90us;51us;90us;81us;90us;88us;90us;91us;90us;93us;90us;94us;90us;95us;90us;96us;90us;97us;90us;98us;90us;99us;90us;100us;90us;101us;90us;102us;90us;103us;90us;104us;90us;105us;90us;106us;90us;107us;90us;108us;90us;109us;90us;110us;90us;111us;90us;112us;90us;114us;90us;116us;90us;118us;90us;3us;65535us;16us;43us;24us;43us;43us;43us;3us;65535us;16us;31us;24us;34us;43us;44us;58us;65535us;0us;53us;2us;53us;10us;53us;11us;53us;12us;53us;17us;53us;21us;53us;25us;53us;29us;53us;32us;53us;35us;53us;51us;53us;58us;53us;59us;53us;60us;53us;61us;53us;62us;53us;63us;53us;64us;53us;65us;53us;66us;53us;67us;53us;68us;53us;69us;53us;70us;53us;71us;53us;72us;53us;73us;53us;74us;53us;75us;53us;76us;53us;77us;53us;81us;53us;88us;53us;91us;53us;93us;53us;94us;53us;95us;53us;96us;53us;97us;53us;98us;53us;99us;53us;100us;53us;101us;53us;102us;53us;103us;53us;104us;53us;105us;53us;106us;53us;107us;53us;108us;53us;109us;53us;110us;53us;111us;53us;112us;53us;114us;53us;116us;53us;118us;53us;58us;65535us;0us;57us;2us;57us;10us;78us;11us;78us;12us;57us;17us;57us;21us;57us;25us;57us;29us;57us;32us;57us;35us;57us;51us;57us;58us;78us;59us;78us;60us;78us;61us;78us;62us;78us;63us;78us;64us;78us;65us;78us;66us;78us;67us;78us;68us;78us;69us;78us;70us;78us;71us;78us;72us;78us;73us;78us;74us;78us;75us;78us;76us;78us;77us;78us;81us;57us;88us;57us;91us;57us;93us;57us;94us;57us;95us;57us;96us;57us;97us;57us;98us;57us;99us;57us;100us;57us;101us;57us;102us;57us;103us;57us;104us;57us;105us;57us;106us;57us;107us;57us;108us;57us;109us;57us;110us;57us;111us;57us;112us;57us;114us;57us;116us;57us;118us;57us;36us;65535us;0us;10us;2us;10us;12us;11us;17us;10us;21us;10us;25us;10us;29us;10us;32us;10us;35us;10us;51us;10us;81us;10us;88us;10us;91us;10us;93us;58us;94us;59us;95us;60us;96us;61us;97us;62us;98us;63us;99us;64us;100us;65us;101us;66us;102us;67us;103us;68us;104us;69us;105us;70us;106us;71us;107us;72us;108us;73us;109us;74us;110us;75us;111us;76us;112us;10us;114us;10us;116us;10us;118us;77us;2us;65535us;12us;13us;118us;119us;8us;65535us;19us;20us;27us;28us;40us;41us;85us;86us;124us;121us;127us;122us;129us;123us;130us;123us;8us;65535us;19us;125us;27us;125us;40us;125us;85us;125us;124us;125us;127us;125us;129us;125us;130us;126us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;2us;4us;6us;23us;60us;64us;68us;127us;186us;223us;226us;235us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;2us;1us;2us;1us;3us;1us;3us;2us;4us;31us;1us;4us;15us;5us;28us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;17us;5us;28us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;53us;54us;3us;6us;23us;26us;1us;6us;1us;6us;6us;7us;8us;9us;10us;11us;12us;3us;7us;8us;11us;1us;7us;1us;7us;1us;8us;4us;8us;56us;59us;60us;1us;8us;1us;8us;3us;9us;10us;12us;3us;9us;10us;12us;1us;9us;1us;9us;1us;10us;4us;10us;56us;59us;60us;1us;10us;1us;10us;1us;11us;1us;11us;1us;11us;1us;12us;1us;12us;1us;12us;1us;13us;1us;14us;1us;14us;1us;14us;4us;14us;56us;59us;60us;1us;14us;2us;15us;16us;1us;16us;1us;17us;1us;18us;1us;19us;1us;20us;1us;21us;1us;22us;2us;23us;26us;1us;23us;1us;24us;1us;25us;1us;26us;1us;26us;1us;27us;15us;28us;32us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;34us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;35us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;36us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;38us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;38us;39us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;38us;39us;40us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;38us;39us;40us;41us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;38us;39us;40us;41us;42us;42us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;38us;39us;40us;41us;42us;43us;43us;44us;45us;46us;47us;48us;49us;50us;15us;28us;38us;39us;40us;41us;42us;43us;44us;44us;45us;46us;47us;48us;49us;50us;15us;28us;38us;39us;40us;41us;42us;43us;44us;45us;45us;46us;47us;48us;49us;50us;15us;28us;38us;39us;40us;41us;42us;43us;44us;45us;46us;46us;47us;48us;49us;50us;15us;28us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;47us;48us;49us;50us;15us;28us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;48us;49us;50us;15us;28us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;49us;50us;15us;28us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;50us;16us;28us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;53us;54us;1us;28us;2us;29us;30us;1us;29us;1us;29us;1us;29us;1us;30us;1us;30us;1us;30us;4us;30us;56us;59us;60us;1us;30us;1us;30us;1us;30us;1us;31us;1us;31us;1us;31us;1us;32us;1us;33us;1us;34us;1us;35us;1us;36us;1us;37us;1us;38us;1us;39us;1us;40us;1us;41us;1us;42us;1us;43us;1us;44us;1us;45us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;2us;51us;52us;2us;51us;52us;2us;51us;52us;2us;51us;52us;1us;52us;1us;52us;1us;54us;1us;54us;1us;55us;4us;56us;56us;59us;60us;4us;56us;58us;59us;60us;5us;56us;59us;59us;60us;60us;1us;56us;1us;57us;2us;57us;60us;1us;58us;1us;58us;2us;59us;60us;3us;59us;60us;60us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;19us;21us;37us;55us;59us;61us;63us;70us;74us;76us;78us;80us;85us;87us;89us;93us;97us;99us;101us;103us;108us;110us;112us;114us;116us;118us;120us;122us;124us;126us;128us;130us;132us;137us;139us;142us;144us;146us;148us;150us;152us;154us;156us;159us;161us;163us;165us;167us;169us;171us;187us;203us;219us;235us;251us;267us;283us;299us;315us;331us;347us;363us;379us;395us;411us;427us;443us;459us;475us;492us;494us;497us;499us;501us;503us;505us;507us;509us;514us;516us;518us;520us;522us;524us;526us;528us;530us;532us;534us;536us;538us;540us;542us;544us;546us;548us;550us;552us;554us;556us;558us;560us;562us;564us;567us;570us;573us;576us;578us;580us;582us;584us;586us;591us;596us;602us;604us;606us;609us;611us;613us;616us;|]
let _fsyacc_action_rows = 131
let _fsyacc_actionTableElements = [|17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;49152us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;49152us;1us;32768us;0us;5us;0us;16386us;1us;32768us;32us;7us;0us;16387us;2us;32768us;8us;91us;32us;9us;0us;16388us;21us;16389us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;18us;106us;19us;107us;20us;108us;21us;109us;22us;104us;23us;105us;24us;110us;25us;111us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;22us;16389us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;18us;106us;19us;107us;20us;108us;21us;109us;22us;104us;23us;105us;24us;110us;25us;111us;33us;118us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;18us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;12us;52us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;1us;32768us;12us;14us;0us;16390us;2us;32768us;7us;23us;35us;16us;4us;32768us;11us;38us;22us;17us;31us;19us;35us;37us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16391us;2us;32768us;11us;127us;35us;120us;3us;32768us;5us;124us;15us;129us;22us;21us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16392us;1us;32768us;35us;24us;4us;32768us;11us;38us;22us;25us;31us;27us;35us;37us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16393us;2us;32768us;11us;127us;35us;120us;3us;32768us;5us;124us;15us;129us;22us;29us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16394us;1us;32768us;22us;32us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16395us;1us;32768us;22us;35us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16396us;0us;16397us;1us;32768us;35us;39us;1us;32768us;31us;40us;2us;32768us;11us;127us;35us;120us;3us;32768us;5us;124us;12us;42us;15us;129us;0us;16398us;2us;16399us;11us;38us;35us;37us;0us;16400us;0us;16401us;0us;16402us;0us;16403us;0us;16404us;0us;16405us;0us;16406us;18us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;12us;52us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16407us;0us;16408us;0us;16409us;1us;32768us;12us;56us;0us;16410us;0us;16411us;9us;16416us;9us;49us;10us;50us;11us;51us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;9us;16417us;9us;49us;10us;50us;11us;51us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;9us;16418us;9us;49us;10us;50us;11us;51us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;9us;16419us;9us;49us;10us;50us;11us;51us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;9us;16420us;9us;49us;10us;50us;11us;51us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;9us;16421us;9us;49us;10us;50us;11us;51us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;11us;16422us;9us;49us;10us;50us;11us;51us;15us;101us;16us;102us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;11us;16423us;9us;49us;10us;50us;11us;51us;15us;101us;16us;102us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;9us;16424us;9us;49us;10us;50us;11us;51us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;9us;16425us;9us;49us;10us;50us;11us;51us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;21us;16426us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;18us;106us;19us;107us;20us;108us;21us;109us;22us;104us;23us;105us;24us;110us;25us;111us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;13us;16427us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;13us;16428us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;13us;16429us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;13us;16430us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;13us;16431us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;13us;16432us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;19us;16433us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;18us;106us;19us;107us;20us;108us;21us;109us;22us;104us;23us;105us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;20us;16434us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;18us;106us;19us;107us;20us;108us;21us;109us;22us;104us;23us;105us;24us;110us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;22us;16437us;9us;49us;10us;50us;11us;51us;13us;99us;14us;100us;15us;101us;16us;102us;17us;103us;18us;106us;19us;107us;20us;108us;21us;109us;22us;104us;23us;105us;24us;110us;25us;111us;33us;118us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16412us;2us;32768us;11us;83us;35us;80us;1us;32768us;5us;81us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16413us;1us;32768us;35us;84us;1us;32768us;31us;85us;2us;32768us;11us;127us;35us;120us;3us;32768us;5us;124us;12us;87us;15us;129us;1us;32768us;5us;88us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16414us;1us;32768us;8us;91us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16415us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;1us;32768us;2us;114us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;1us;16435us;3us;116us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;12us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16436us;17us;32768us;1us;112us;4us;79us;6us;15us;9us;49us;10us;50us;11us;51us;14us;94us;26us;93us;27us;95us;28us;96us;29us;97us;30us;98us;34us;47us;35us;54us;36us;48us;37us;46us;38us;45us;0us;16438us;0us;16439us;2us;16440us;5us;124us;15us;129us;3us;32768us;5us;124us;12us;128us;15us;129us;0us;16443us;2us;32768us;11us;127us;35us;120us;0us;16441us;0us;16441us;2us;32768us;11us;127us;35us;120us;0us;16442us;2us;32768us;11us;127us;35us;120us;2us;32768us;11us;127us;35us;120us;|]
let _fsyacc_actionTableRowOffsets = [|0us;18us;19us;37us;38us;40us;41us;43us;44us;47us;48us;70us;93us;112us;114us;115us;118us;123us;141us;142us;145us;149us;167us;168us;170us;175us;193us;194us;197us;201us;219us;220us;222us;240us;241us;243us;261us;262us;263us;265us;267us;270us;274us;275us;278us;279us;280us;281us;282us;283us;284us;285us;304us;305us;306us;307us;309us;310us;311us;321us;331us;341us;351us;361us;371us;383us;395us;405us;415us;437us;451us;465us;479us;493us;507us;521us;541us;562us;585us;586us;589us;591us;609us;610us;612us;614us;617us;621us;623us;641us;642us;644us;662us;663us;681us;699us;717us;735us;753us;771us;789us;807us;825us;843us;861us;879us;897us;915us;933us;951us;969us;987us;1005us;1023us;1025us;1043us;1045us;1063us;1064us;1082us;1083us;1084us;1087us;1091us;1092us;1095us;1096us;1097us;1100us;1101us;1104us;|]
let _fsyacc_reductionSymbolCounts = [|1us;1us;2us;2us;2us;1us;3us;4us;6us;5us;7us;5us;6us;1us;5us;1us;2us;1us;1us;1us;1us;1us;1us;2us;1us;1us;3us;1us;2us;4us;8us;3us;2us;2us;2us;2us;2us;2us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;4us;6us;1us;3us;1us;3us;1us;3us;3us;5us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;3us;3us;4us;4us;5us;5us;5us;5us;5us;5us;6us;6us;7us;7us;8us;8us;8us;8us;8us;8us;8us;9us;9us;9us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;10us;11us;11us;12us;12us;12us;12us;13us;13us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;49152us;65535us;16386us;65535us;16387us;65535us;16388us;65535us;65535us;65535us;65535us;16390us;65535us;65535us;65535us;16391us;65535us;65535us;65535us;16392us;65535us;65535us;65535us;16393us;65535us;65535us;65535us;16394us;65535us;65535us;16395us;65535us;65535us;16396us;16397us;65535us;65535us;65535us;65535us;16398us;65535us;16400us;16401us;16402us;16403us;16404us;16405us;16406us;65535us;16407us;16408us;16409us;65535us;16410us;16411us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16412us;65535us;65535us;65535us;16413us;65535us;65535us;65535us;65535us;65535us;65535us;16414us;65535us;65535us;16415us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16436us;65535us;16438us;16439us;65535us;65535us;65535us;65535us;16441us;65535us;65535us;16442us;65535us;65535us;|]
let _fsyacc_reductions = lazy [|
# 374 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  TinyML.Ast.interactive  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startinteractive));
# 383 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  TinyML.Ast.expr  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startprogram));
# 392 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "Parser.fsy"
                                                               _1 
                   )
# 53 "Parser.fsy"
                 :  TinyML.Ast.expr ));
# 403 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                                               IExpr _1 
                   )
# 56 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 414 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binding in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "Parser.fsy"
                                                               IBinding _1 
                   )
# 57 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 425 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                                               _1 
                   )
# 60 "Parser.fsy"
                 : 'gentype_expr));
# 436 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atoms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                                               Tuple _2 
                   )
# 61 "Parser.fsy"
                 : 'gentype_expr));
# 447 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "Parser.fsy"
                                                               (false, _2, None, _4) 
                   )
# 64 "Parser.fsy"
                 : 'gentype_binding));
# 459 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                                               (false, _2, Some _4, _6) 
                   )
# 65 "Parser.fsy"
                 : 'gentype_binding));
# 472 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                                               (true, _3, None, _5) 
                   )
# 66 "Parser.fsy"
                 : 'gentype_binding));
# 484 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _5 = parseState.GetInput(5) :?> 'gentype_ty in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Parser.fsy"
                                                               (true, _3, Some _5, _7) 
                   )
# 67 "Parser.fsy"
                 : 'gentype_binding));
# 497 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _3 = parseState.GetInput(3) :?> 'gentype_params in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                                               (false, _2, None, desugar_params _3 _5) 
                   )
# 69 "Parser.fsy"
                 : 'gentype_binding));
# 510 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_params in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Parser.fsy"
                                                               (true, _3, None, desugar_params _4 _6 )
                   )
# 70 "Parser.fsy"
                 : 'gentype_binding));
# 523 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Parser.fsy"
                                                               (_1, None) 
                   )
# 73 "Parser.fsy"
                 : 'gentype_param));
# 534 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Parser.fsy"
                                                               (_2, Some _4) 
                   )
# 74 "Parser.fsy"
                 : 'gentype_param));
# 546 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_param in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Parser.fsy"
                                                               [_1] 
                   )
# 77 "Parser.fsy"
                 : 'gentype_params));
# 557 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_param in
            let _2 = parseState.GetInput(2) :?> 'gentype_params in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                                               _1 :: _2 
                   )
# 78 "Parser.fsy"
                 : 'gentype_params));
# 569 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Int32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "Parser.fsy"
                                                               LInt _1 
                   )
# 81 "Parser.fsy"
                 : 'gentype_lit));
# 580 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Double in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                                               LFloat _1 
                   )
# 82 "Parser.fsy"
                 : 'gentype_lit));
# 591 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Parser.fsy"
                                                               LString _1 
                   )
# 83 "Parser.fsy"
                 : 'gentype_lit));
# 602 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "Parser.fsy"
                                                               LChar _1 
                   )
# 84 "Parser.fsy"
                 : 'gentype_lit));
# 613 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Parser.fsy"
                                                               LBool true 
                   )
# 85 "Parser.fsy"
                 : 'gentype_lit));
# 623 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                               LBool false 
                   )
# 86 "Parser.fsy"
                 : 'gentype_lit));
# 633 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                                               LUnit 
                   )
# 87 "Parser.fsy"
                 : 'gentype_lit));
# 643 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lit in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                                               Lit _1 
                   )
# 90 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 654 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                               Var _1 
                   )
# 91 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 665 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Parser.fsy"
                                                               _2 
                   )
# 92 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 676 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_app_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                                                       _1 
                   )
# 95 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 687 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_app_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Parser.fsy"
                                                                       App (_1, _2) 
                   )
# 96 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 699 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                                                       Lambda (_2, None, _4) 
                   )
# 98 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 711 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _5 = parseState.GetInput(5) :?> 'gentype_ty in
            let _8 = parseState.GetInput(8) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                                                       Lambda (_3, Some _5, _8) 
                   )
# 99 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 724 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binding in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Parser.fsy"
                                                                       LetIn (_1, _3) 
                   )
# 101 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 736 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Parser.fsy"
                                                                 UnOp ("not", _2) 
                   )
# 103 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 747 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                                                     UnOp ("-", _2) 
                   )
# 104 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 758 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Parser.fsy"
                                                                       UnOp ("float", _2) 
                   )
# 105 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 769 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Parser.fsy"
                                                                       UnOp ("int", _2) 
                   )
# 106 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 780 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                                                       UnOp ("string", _2) 
                   )
# 107 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 791 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Parser.fsy"
                                                                       UnOp ("char", _2) 
                   )
# 108 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 802 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Parser.fsy"
                                                                       BinOp (_1, "+", _3) 
                   )
# 110 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 814 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                                                       BinOp (_1, "-", _3) 
                   )
# 111 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 826 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                                                       BinOp (_1, "*", _3) 
                   )
# 112 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 838 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                                                       BinOp (_1, "/", _3) 
                   )
# 113 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 850 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Parser.fsy"
                                                                       BinOp (_1, "%", _3) 
                   )
# 114 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 862 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Parser.fsy"
                                                                       BinOp (_1, "=", _3) 
                   )
# 116 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 874 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Parser.fsy"
                                                                       BinOp (_1, "<>", _3) 
                   )
# 117 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 886 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Parser.fsy"
                                                                       BinOp (_1, "<", _3) 
                   )
# 118 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 898 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "Parser.fsy"
                                                                       BinOp (_1, ">", _3) 
                   )
# 119 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 910 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Parser.fsy"
                                                                       BinOp (_1, "<=", _3) 
                   )
# 120 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 922 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Parser.fsy"
                                                                       BinOp (_1, ">=", _3) 
                   )
# 121 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 934 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "Parser.fsy"
                                                                       BinOp (_1, "and", _3) 
                   )
# 122 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 946 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "Parser.fsy"
                                                                       BinOp (_1, "or", _3) 
                   )
# 123 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 958 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "Parser.fsy"
                                                                       IfThenElse (_2, _4, None) 
                   )
# 125 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 970 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "Parser.fsy"
                                                                       IfThenElse (_2, _4, Some _6) 
                   )
# 126 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 983 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "Parser.fsy"
                                                                       [_1] 
                   )
# 129 "Parser.fsy"
                 : 'gentype_expr_tuple_atoms));
# 994 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atoms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Parser.fsy"
                                                                       _1 :: _3 
                   )
# 130 "Parser.fsy"
                 : 'gentype_expr_tuple_atoms));
# 1006 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Parser.fsy"
                                                               TyName _1 
                   )
# 134 "Parser.fsy"
                 : 'gentype_ty));
# 1017 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "Parser.fsy"
                                                               TyArrow (_1, _3) 
                   )
# 135 "Parser.fsy"
                 : 'gentype_ty));
# 1029 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "Parser.fsy"
                                                               TyTuple _1 
                   )
# 136 "Parser.fsy"
                 : 'gentype_ty));
# 1040 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Parser.fsy"
                                                               _2 
                   )
# 137 "Parser.fsy"
                 : 'gentype_ty));
# 1051 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "Parser.fsy"
                                                               [_1; _3] 
                   )
# 140 "Parser.fsy"
                 : 'gentype_ty_tuple));
# 1063 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty in
            let _5 = parseState.GetInput(5) :?> 'gentype_ty_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "Parser.fsy"
                                                               _1 :: _3 :: _5 
                   )
# 141 "Parser.fsy"
                 : 'gentype_ty_tuple));
|]
# 1077 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 42;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let interactive lexer lexbuf :  TinyML.Ast.interactive  =
    engine lexer lexbuf 0 :?> _
let program lexer lexbuf :  TinyML.Ast.expr  =
    engine lexer lexbuf 2 :?> _
